From patchwork Wed Jul 20 02:18:01 2022
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Liam Howlett <Liam.Howlett@Oracle.com>
X-Patchwork-Id: 12923270
Return-Path: <owner-linux-mm@kvack.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from kanga.kvack.org (kanga.kvack.org [205.233.56.17])
	by smtp.lore.kernel.org (Postfix) with ESMTP id A89B4C43334
	for <linux-mm@archiver.kernel.org>; Wed, 20 Jul 2022 02:19:17 +0000 (UTC)
Received: by kanga.kvack.org (Postfix)
	id 0E95E940027; Tue, 19 Jul 2022 22:18:51 -0400 (EDT)
Received: by kanga.kvack.org (Postfix, from userid 40)
	id F3EA5940014; Tue, 19 Jul 2022 22:18:50 -0400 (EDT)
X-Delivered-To: int-list-linux-mm@kvack.org
Received: by kanga.kvack.org (Postfix, from userid 63042)
	id C7FBB940027; Tue, 19 Jul 2022 22:18:50 -0400 (EDT)
X-Delivered-To: linux-mm@kvack.org
Received: from relay.hostedemail.com (smtprelay0011.hostedemail.com
 [216.40.44.11])
	by kanga.kvack.org (Postfix) with ESMTP id B23B8940014
	for <linux-mm@kvack.org>; Tue, 19 Jul 2022 22:18:50 -0400 (EDT)
Received: from smtpin11.hostedemail.com (a10.router.float.18 [10.200.18.1])
	by unirelay07.hostedemail.com (Postfix) with ESMTP id 7E6B91603E6
	for <linux-mm@kvack.org>; Wed, 20 Jul 2022 02:18:50 +0000 (UTC)
X-FDA: 79705870020.11.482D55D
Received: from mx0a-00069f02.pphosted.com (mx0a-00069f02.pphosted.com
 [205.220.165.32])
	by imf25.hostedemail.com (Postfix) with ESMTP id 115E6A0009
	for <linux-mm@kvack.org>; Wed, 20 Jul 2022 02:18:49 +0000 (UTC)
Received: from pps.filterd (m0246617.ppops.net [127.0.0.1])
	by mx0b-00069f02.pphosted.com (8.17.1.5/8.17.1.5) with ESMTP id
 26K0JPuq031784;
	Wed, 20 Jul 2022 02:18:47 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com;
 h=from : to : cc :
 subject : date : message-id : references : in-reply-to : content-type :
 content-transfer-encoding : mime-version; s=corp-2022-7-12;
 bh=fw8iggsZKrpj6KZCqzPE7XQWA07OTVo/TPN3GDUGa0Q=;
 b=D4sARxURucH4UwhAcgvkiWe0vR00FAxdlFlPzXdUUY68RzCxIitLBpxo2YdIhTa/BIrS
 hStMgYFJT21FotFKeKtVeJfUmeE9dkZv9dyBd78YURZX1NC7BXDDz6g/823feiANpvqH
 yMdQwZmD+2TotUeamEFyTrKuVMCicgX0tDgI8DnojM4m20+gxCZOTDloCwKvK7npHBqU
 Opo///y+P6C86fUZ/22Vje/EpAvqhscjILLGAwgheiLUookSHcLy0AU9A1h9V8F818MR
 deNVitN+g7SHrFSCnPFzQXdZtaaXqSAG0V1QPMmfgi4+AIUm8G7H01T/lqRHWnuQ/3fy fg==
Received: from iadpaimrmta01.imrmtpd1.prodappiadaev1.oraclevcn.com
 (iadpaimrmta01.appoci.oracle.com [130.35.100.223])
	by mx0b-00069f02.pphosted.com (PPS) with ESMTPS id 3hbnvtg6bq-1
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
	Wed, 20 Jul 2022 02:18:46 +0000
Received: from pps.filterd
 (iadpaimrmta01.imrmtpd1.prodappiadaev1.oraclevcn.com [127.0.0.1])
	by iadpaimrmta01.imrmtpd1.prodappiadaev1.oraclevcn.com (8.17.1.5/8.17.1.5)
 with ESMTP id 26JNHEna007944;
	Wed, 20 Jul 2022 02:18:45 GMT
Received: from nam11-dm6-obe.outbound.protection.outlook.com
 (mail-dm6nam11lp2175.outbound.protection.outlook.com [104.47.57.175])
	by iadpaimrmta01.imrmtpd1.prodappiadaev1.oraclevcn.com (PPS) with ESMTPS id
 3hc1k3w3kw-2
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
	Wed, 20 Jul 2022 02:18:45 +0000
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=LVJyIqhZx2LUHjI0z6+S99wy+30uuxu1KE1+6M8BJUduYeV+W0+EOQtyYocRWH+9hjswB7Bju0e6HY2CJYCIrGblaSexoPRni1bld19+k3r0JixIS/ktk1KFwrnI+xOCX/UAReUKIFboCT1Arodf3L6pt3dL8YiAOvPJAtYkhdqEcD/JbHhoJl422xt/DFx6eeIeROEBkpajesnQ3lgtyMx2SmI+cvRDme+/aFEgPU/+mMmjIEaFICT3PRtamr5GN8INQNIlDRv4la2UUj9l2TaN7A9BsNNoNLOzgtaB7eqsq8njHER067DrPzlN/yCyJ2uXp19NluT5+mDJIDhtpA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=fw8iggsZKrpj6KZCqzPE7XQWA07OTVo/TPN3GDUGa0Q=;
 b=AXcxgtr5n1szcV4wwKirjW0Pcx25gGClVmo2iv6IPKsfSJwhEva9eP0xEufym9wVn/i/5hmUdGCiUAxyO7oqhBNE1gbCT1ZaQAjXk6/sn3LxXflmcoVnKBOZOnnWclb5P9xvjAmdr2YgdnGd4ZbzMZr2BCoQ9STKrgX7h8799Yn+8n+EVEc/I327zU+o+X3/P/eOrwCPrn5J6BvjKfcSGENGijSng2jnb9A3s/5wVEM0dzzfJTyhuK8io4U1mkjxkS9Xw5rWm6tXMMTfLKp1ifvgV/g1PGIsCGnKFXfa9T9FmBMTye0QUztdWU5+rh8j0rMSE4OSlNmRBGDlHy0XiA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=oracle.com; dmarc=pass action=none header.from=oracle.com;
 dkim=pass header.d=oracle.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=oracle.onmicrosoft.com; s=selector2-oracle-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=fw8iggsZKrpj6KZCqzPE7XQWA07OTVo/TPN3GDUGa0Q=;
 b=rW4MdKPy2QsXrd3Ubat0t7k14BgukXHVJbEpatrS2B1LRoxOu819K5+MnJ4PkD6296mzEV3qZWhL0wirZH3LBuBV23Ql4Thj/Fvm1UeF+VrCtzsaN/eN4fWXQLV9IMurMtuO4CDomtctfBVlbYiTAkzU3bQeuDMyljsc78bzzPU=
Received: from SN6PR10MB3022.namprd10.prod.outlook.com (2603:10b6:805:d8::25)
 by BL3PR10MB6233.namprd10.prod.outlook.com (2603:10b6:208:38c::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.5438.12; Wed, 20 Jul
 2022 02:18:43 +0000
Received: from SN6PR10MB3022.namprd10.prod.outlook.com
 ([fe80::c4d1:edc3:7d21:7c68]) by SN6PR10MB3022.namprd10.prod.outlook.com
 ([fe80::c4d1:edc3:7d21:7c68%6]) with mapi id 15.20.5438.024; Wed, 20 Jul 2022
 02:18:43 +0000
From: Liam Howlett <liam.howlett@oracle.com>
To: "maple-tree@lists.infradead.org" <maple-tree@lists.infradead.org>,
        "linux-mm@kvack.org" <linux-mm@kvack.org>,
        "linux-kernel@vger.kernel.org"
	<linux-kernel@vger.kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Hugh Dickins <hughd@google.com>
CC: Yu Zhao <yuzhao@google.com>
Subject: [PATCH v12 57/69] mm/mlock: use vma iterator and maple state instead
 of vma linked list
Thread-Topic: [PATCH v12 57/69] mm/mlock: use vma iterator and maple state
 instead of vma linked list
Thread-Index: AQHYm97v8Wbn2YCWSEaq0szTMkwUqw==
Date: Wed, 20 Jul 2022 02:18:01 +0000
Message-ID: <20220720021727.17018-58-Liam.Howlett@oracle.com>
References: <20220720021727.17018-1-Liam.Howlett@oracle.com>
In-Reply-To: <20220720021727.17018-1-Liam.Howlett@oracle.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.35.1
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: 0006fdf0-9983-41e1-26cc-08da69f62b30
x-ms-traffictypediagnostic: BL3PR10MB6233:EE_
x-ms-exchange-senderadcheck: 1
x-ms-exchange-antispam-relay: 0
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: 
 G9QJ0+8Lp0MYIBbchIJwiGHGC1FZUgfZC3Ipp8wOkHx8Wb4JdQuq/jvwuFwFsCFcif2pHEjxG+wN4Batzv7RMqo/jjX7HQNBttuVnoPexKNAwsG/8qe5CgBVelj2uJCIscb0qfYCfc0J1ZsTTIt2k5ewLmNYVEuuZ7WhVicV4efoSBxHuvFFtN1pjW+A+L0zDvLPwhkR40KatKUF9wkO4y3/zts3SVeoQ/HLueDVkIeYgWF4dv/2x4fIuKDUcvecwm4UeRl02cQKEA99bhUmsBQwhnQ/PB9gXBFrQ4+tXzi4PpHGqQH7iyKVokwBxLhuPW+QNlQ7U7ZpFFlgXLf8qFR/OMBzH7jA/4oWDuUVEMO5zhZlAfC9Ub6xjdvDqXd9fiIqtB1FVGw1sZaStRaZJ+6Sxzqq+JZgNbOEiT5xQOUVYot67OwWRfE3UtlVUUmpz3cp86xCwksrzE6mgZTvmy5iO+vC0HH7iy8h7VkYQODbp4m9weG2sW+TYRXW5Zr+d8mDkVeMsgygOr0o7p1Fu1FkNT7CCFunoKfq9HMZ0aP06hYThwsVRiZmxM7Tdix2gGHrzrL9zXXdWxyNEhtdPZwVbXBHH8qi4kSkCqX5wQmPo2UGGgj5LnbEjB4015vTLXgw2TxHR7Hh05jUV1JjK9kuOqMXJ2y4YacLbqMUF6R/VKHzuvHw6IN4p6ImZ7wUennV77V3peAeBrM97Xn/NHpNVCRobXdn8ZFpLPvPik4h8IsUlhgmd/wpKi1+kX5ig/M4q00VtcQyfXTVHDzBvZCfAGxHiVinU2MZiOE/2FpmxLsP+Rk1kmHWumgGthMKDCOaD99EjetlA+TmmirHBR/cW2hmg4SgumB9WtPkGFRZbjjH3KzfbUZKqlj0ZWJ1
x-forefront-antispam-report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR10MB3022.namprd10.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230016)(376002)(346002)(396003)(136003)(39860400002)(366004)(186003)(6666004)(2906002)(41300700001)(6512007)(1076003)(38100700002)(6506007)(26005)(2616005)(38070700005)(86362001)(83380400001)(122000001)(478600001)(316002)(44832011)(8676002)(4326008)(64756008)(36756003)(66946007)(5660300002)(8936002)(110136005)(66476007)(91956017)(66446008)(66556008)(76116006)(6486002)(71200400001)(966005);DIR:OUT;SFP:1101;
x-ms-exchange-antispam-messagedata-chunkcount: 1
x-ms-exchange-antispam-messagedata-0: =?iso-8859-1?q?5bXhoCSA+irfC7D6wlI2yT7?=
	=?iso-8859-1?q?xcoMVz3owjisqjdMdyBej1IhliAi3k2TR+2FbQWB/FurJ5uepnMx+Ql+tOXB?=
	=?iso-8859-1?q?etadvBX/alA5PolXyGMGNPRWtk64p02+R8wi+v6lqYGRSh50Qw4tBRSDpjOR?=
	=?iso-8859-1?q?d7H7WN44yrEC8F01qUe4yvnMT9/W7NcWg2txKIkxGjsk468uALXNG9wtPQIa?=
	=?iso-8859-1?q?QJY1MH4u16tZ45nXNqprdDMi44Rx4vNXNCRab7tS1ImeavPx8GN+609NudGF?=
	=?iso-8859-1?q?jQ+RYqA6Dlme9C/TdsR1769JJTl+MiTPh0In7QW2o+j80YoVWtaUtWJUYrPS?=
	=?iso-8859-1?q?LIcZTnH4W0EHiG7GnEzQrDxJdeOWa0Utg8xUpUcgnOJxfdfuz/kYV7Hk7NSY?=
	=?iso-8859-1?q?90DcAbBmdRubtYymbFl1hVwcA1bspcyOBX3bHvqMywpYnVSQ0QqhpnpHbtDX?=
	=?iso-8859-1?q?1oeBjb3yBEEIaAWcorvbXkfyixcaaBNRyCwCfWgclBiBmruIqtS36dFqCdmJ?=
	=?iso-8859-1?q?NccWIU3fR2+S0xXT8JguIUYKfb2QozwU7BrWwPSMsLdx2KMCFUtcPB9tLjG9?=
	=?iso-8859-1?q?Fe2/7e89Zmsn3zyyZpNuSnKtKZcW0iVQ1bKLF8EhLI6PoVUUS4hRP7s2LTx2?=
	=?iso-8859-1?q?t3jLBd+wOrZGz3P/PSTsxrB7gPZhfG8E5VosgN6HWpvQSTAOCM0U+NweKMp0?=
	=?iso-8859-1?q?wvUnvKgFNHQXaHNlyJblVwgbLB0DFdcn752uTqcMRGXPGVZbeJrz8lFBPMjD?=
	=?iso-8859-1?q?MmT61dvxWdVuExNBZR2SjUHPPz0be03xB9EY+lRIrrLZW+vh5sUKlLO/aGsE?=
	=?iso-8859-1?q?ej1w0br/qpBgsYgD1j1J4u6mx5dNwArD8TkiStoxfD6Waw/ceh0wV23+zPji?=
	=?iso-8859-1?q?6xRT0zaaw7sfbqUMHEXgiITeqYW6Pwg/La3MTg3bvZxxhApQlHnXAPV5yIjR?=
	=?iso-8859-1?q?8fupIukt2iWjlh+d4XmERX5sYxXzFM31JvuRpIQRexO3fZ/LOFT9bkshCbMG?=
	=?iso-8859-1?q?R29fM5o91Xlhe7+sjUfzbTB+qETY0w5bHTdHF01RuFSFKoxl1kzMNGJBidU4?=
	=?iso-8859-1?q?ChgaP+JATa9XGV/RcsT99tX/g63nuSaAb8yCIMPMa7jxdHcdCbifwRnyfe1z?=
	=?iso-8859-1?q?czMfblPiKkg4ENFwjvaHIoTXrJC7a96nOeNQ5xXP3oPlsKv58wSbfXEwrL5c?=
	=?iso-8859-1?q?Gi0dCWP5zGxpkOeWpTbGDEQ/tJjWQ3A50QQVo4edgUX0je/thWucI6mXFAt9?=
	=?iso-8859-1?q?XarYDQFaUiWNmvR2fVZeJFV+ch7RkSfbmmZux9HRaaF9CrctwFtBbm/0ZkHg?=
	=?iso-8859-1?q?VIXbpTmhfWqMtLqrg0p9dHXV0I0sywz/kppxNCO49ZYEs2ypF1W3sR5d8u6j?=
	=?iso-8859-1?q?Dqo4zRnEnKmJocOey4WFvODwNQ1Q4r47S0EVK7oS9HyTA6/qDo0xGANFYET2?=
	=?iso-8859-1?q?vupdP9HLA/gldGv1NudIFWhAhvGv3WTfHMfcwMEL2QrXSimdps6c5/MZbqZy?=
	=?iso-8859-1?q?4WeRLSlfWTfTUpqMc4QXxz60vLc17/irIla0g4QFExjHKNtbZBJBn0qW4rb8?=
	=?iso-8859-1?q?98qoG5USfRT9/sSmtyGUxHztZw0f2efO+2LTBSQQy/19J1X+/Juin/r0c1fb?=
	=?iso-8859-1?q?lAy3ZILkA5FS5qkUrtyilKpVmOo88FVxsELU/Qg=3D=3D?=
MIME-Version: 1.0
X-OriginatorOrg: oracle.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-AuthSource: SN6PR10MB3022.namprd10.prod.outlook.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 0006fdf0-9983-41e1-26cc-08da69f62b30
X-MS-Exchange-CrossTenant-originalarrivaltime: 20 Jul 2022 02:18:01.6331
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 4e2c6054-71cb-48f1-bd6c-3a9705aca71b
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: 
 Ifrby1QzpbY6x+CWAN33QedIqIpOMulgyGA1WZlz29EiHqsx0iG/3xWzYB8/Ku3K5EvA5Lwm/M9PKMlh7NDkvA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BL3PR10MB6233
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.205,Aquarius:18.0.883,Hydra:6.0.517,FMLib:17.11.122.1
 definitions=2022-07-19_10,2022-07-19_01,2022-06-22_01
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 mlxscore=0
 adultscore=0 phishscore=0
 mlxlogscore=999 spamscore=0 malwarescore=0 bulkscore=0 suspectscore=0
 classifier=spam adjust=0 reason=mlx scancount=1 engine=8.12.0-2206140000
 definitions=main-2207200008
X-Proofpoint-GUID: AZ340EIytn0Pc1XWjVATJ5_-XT0nRgKU
X-Proofpoint-ORIG-GUID: AZ340EIytn0Pc1XWjVATJ5_-XT0nRgKU
ARC-Authentication-Results: i=2;
	imf25.hostedemail.com;
	dkim=pass header.d=oracle.com header.s=corp-2022-7-12 header.b=D4sARxUR;
	dkim=pass header.d=oracle.onmicrosoft.com
 header.s=selector2-oracle-onmicrosoft-com header.b=rW4MdKPy;
	dmarc=pass (policy=none) header.from=oracle.com;
	arc=pass ("microsoft.com:s=arcselector9901:i=1");
	spf=none (imf25.hostedemail.com: domain of liam.howlett@oracle.com has no SPF
 policy when checking 205.220.165.32) smtp.mailfrom=liam.howlett@oracle.com
ARC-Message-Signature: i=2; a=rsa-sha256; c=relaxed/relaxed;
 d=hostedemail.com;
	s=arc-20220608; t=1658283530;
	h=from:from:sender:reply-to:subject:subject:date:date:
	 message-id:message-id:to:to:cc:cc:mime-version:mime-version:
	 content-type:content-type:
	 content-transfer-encoding:content-transfer-encoding:
	 in-reply-to:in-reply-to:references:references:dkim-signature;
	bh=fw8iggsZKrpj6KZCqzPE7XQWA07OTVo/TPN3GDUGa0Q=;
	b=TX6fHS2hYV0lH+pSaZsThmVmJeEbw5nMTTXUJIa1JbFbAopd5hBr77q3s7dPfaI9om7tU9
	hl4SMVQMMgjAFHam5wLbiElQhuk7ZtsdWbFI2Fr/oXvpVdlBkILvyRnz2qvJJlGmAavBHc
	yUwr/QsXo/pdSbVGYL8ZFse+gQ8HFck=
ARC-Seal: i=2; s=arc-20220608; d=hostedemail.com; t=1658283530; a=rsa-sha256;
	cv=pass;
	b=zJT6uYyjVpCqFIPkemHL0QHTRNyxbUzpu6sp8zonza7/ypbwQv5CijCCRL3mQc0f6iwo2Z
	fRJghqFxuSVcFBG16EvMvKSvuLiEaAJgS4Ts0Wai1agpszO1RrBzZGMldKYqDmA0P4NiPW
	cJm7PITZrJaURdBYGgs/WK87KbqU67Q=
X-Rspamd-Queue-Id: 115E6A0009
Authentication-Results: imf25.hostedemail.com;
	dkim=pass header.d=oracle.com header.s=corp-2022-7-12 header.b=D4sARxUR;
	dkim=pass header.d=oracle.onmicrosoft.com
 header.s=selector2-oracle-onmicrosoft-com header.b=rW4MdKPy;
	dmarc=pass (policy=none) header.from=oracle.com;
	arc=pass ("microsoft.com:s=arcselector9901:i=1");
	spf=none (imf25.hostedemail.com: domain of liam.howlett@oracle.com has no SPF
 policy when checking 205.220.165.32) smtp.mailfrom=liam.howlett@oracle.com
X-Rspam-User: 
X-Rspamd-Server: rspam04
X-Stat-Signature: 6aahkhr4cykh6qqbtycsznwtetojww5x
X-HE-Tag: 1658283529-288302
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.4
Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>

From: "Matthew Wilcox (Oracle)" <willy@infradead.org>

Handle overflow checking in count_mm_mlocked_page_nr() differently.

Link: https://lkml.kernel.org/r/20220504011345.662299-42-Liam.Howlett@oracle.com
Link: https://lkml.kernel.org/r/20220621204632.3370049-58-Liam.Howlett@oracle.com
Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
Signed-off-by: Liam R. Howlett <Liam.Howlett@Oracle.com>
Cc: Catalin Marinas <catalin.marinas@arm.com>
Cc: David Howells <dhowells@redhat.com>
Cc: SeongJae Park <sj@kernel.org>
Cc: Vlastimil Babka <vbabka@suse.cz>
Cc: Will Deacon <will@kernel.org>
Cc: Davidlohr Bueso <dave@stgolabs.net>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 mm/mlock.c | 35 +++++++++++++++++++----------------
 1 file changed, 19 insertions(+), 16 deletions(-)

diff --git a/mm/mlock.c b/mm/mlock.c
index 111111111..111111111 100644
--- a/mm/mlock.c
+++ b/mm/mlock.c
@@ -471,6 +471,7 @@ static int apply_vma_lock_flags(unsigned long start, size_t len,
 	unsigned long nstart, end, tmp;
 	struct vm_area_struct *vma, *prev;
 	int error;
+	MA_STATE(mas, &current->mm->mm_mt, start, start);
 
 	VM_BUG_ON(offset_in_page(start));
 	VM_BUG_ON(len != PAGE_ALIGN(len));
@@ -479,13 +480,14 @@ static int apply_vma_lock_flags(unsigned long start, size_t len,
 		return -EINVAL;
 	if (end == start)
 		return 0;
-	vma = find_vma(current->mm, start);
-	if (!vma || vma->vm_start > start)
+	vma = mas_walk(&mas);
+	if (!vma)
 		return -ENOMEM;
 
-	prev = vma->vm_prev;
 	if (start > vma->vm_start)
 		prev = vma;
+	else
+		prev = mas_prev(&mas, 0);
 
 	for (nstart = start ; ; ) {
 		vm_flags_t newflags = vma->vm_flags & VM_LOCKED_CLEAR_MASK;
@@ -505,7 +507,7 @@ static int apply_vma_lock_flags(unsigned long start, size_t len,
 		if (nstart >= end)
 			break;
 
-		vma = prev->vm_next;
+		vma = find_vma(prev->vm_mm, prev->vm_end);
 		if (!vma || vma->vm_start != nstart) {
 			error = -ENOMEM;
 			break;
@@ -526,24 +528,23 @@ static unsigned long count_mm_mlocked_page_nr(struct mm_struct *mm,
 {
 	struct vm_area_struct *vma;
 	unsigned long count = 0;
+	unsigned long end;
+	VMA_ITERATOR(vmi, mm, start);
 
 	if (mm == NULL)
 		mm = current->mm;
 
-	vma = find_vma(mm, start);
-	if (vma == NULL)
-		return 0;
-
-	for (; vma ; vma = vma->vm_next) {
-		if (start >= vma->vm_end)
-			continue;
-		if (start + len <=  vma->vm_start)
-			break;
+	/* Don't overflow past ULONG_MAX */
+	if (unlikely(ULONG_MAX - len < start))
+		end = ULONG_MAX;
+	else
+		end = start + len;
+	for_each_vma_range(vmi, vma, end) {
 		if (vma->vm_flags & VM_LOCKED) {
 			if (start > vma->vm_start)
 				count -= (start - vma->vm_start);
-			if (start + len < vma->vm_end) {
-				count += start + len - vma->vm_start;
+			if (end < vma->vm_end) {
+				count += end - vma->vm_start;
 				break;
 			}
 			count += vma->vm_end - vma->vm_start;
@@ -659,6 +660,7 @@ SYSCALL_DEFINE2(munlock, unsigned long, start, size_t, len)
  */
 static int apply_mlockall_flags(int flags)
 {
+	MA_STATE(mas, &current->mm->mm_mt, 0, 0);
 	struct vm_area_struct *vma, *prev = NULL;
 	vm_flags_t to_add = 0;
 
@@ -679,7 +681,7 @@ static int apply_mlockall_flags(int flags)
 			to_add |= VM_LOCKONFAULT;
 	}
 
-	for (vma = current->mm->mmap; vma ; vma = prev->vm_next) {
+	mas_for_each(&mas, vma, ULONG_MAX) {
 		vm_flags_t newflags;
 
 		newflags = vma->vm_flags & VM_LOCKED_CLEAR_MASK;
@@ -687,6 +689,7 @@ static int apply_mlockall_flags(int flags)
 
 		/* Ignore errors */
 		mlock_fixup(vma, &prev, vma->vm_start, vma->vm_end, newflags);
+		mas_pause(&mas);
 		cond_resched();
 	}
 out:

