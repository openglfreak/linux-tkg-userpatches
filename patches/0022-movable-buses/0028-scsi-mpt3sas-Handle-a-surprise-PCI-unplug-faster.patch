From bc84bcf522e9ba99a22d569aec040db46894a827 Mon Sep 17 00:00:00 2001
From: Sergei Miroshnichenko <s.miroshnichenko@yadro.com>
Date: Thu, 3 Dec 2020 13:38:17 +0300
Subject: [PATCH 28/57] scsi: mpt3sas: Handle a surprise PCI unplug faster

When a HBA disappears from the PCI bus (due to a surprise unplug or a h/w
failure), unloading its driver may take tens of minutes, and the lsscsi
still shows the already-removed devices before that finishes. This happens
because the SYNCHRONIZE_CACHE is queued and allowed during driver unload,
waiting for a 1 minute timeout for each drive.

Add a new dead_host flag, accompanying the remove_host flag, to indicate an
inability to queue any command. Now a cleanup after a sudden HBA removal
takes a few seconds.

Fixes: 9029a72500b9 ("scsi: mpt3sas: Fix Sync cache command failure during driver unload")
CC: linux-scsi@vger.kernel.org
CC: Suganath Prabu S <suganath-prabu.subramani@broadcom.com>
Signed-off-by: Sergei Miroshnichenko <s.miroshnichenko@yadro.com>
---
 drivers/scsi/mpt3sas/mpt3sas_base.c  | 1 +
 drivers/scsi/mpt3sas/mpt3sas_base.h  | 2 ++
 drivers/scsi/mpt3sas/mpt3sas_scsih.c | 2 +-
 3 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/scsi/mpt3sas/mpt3sas_base.c b/drivers/scsi/mpt3sas/mpt3sas_base.c
index 111111111..111111111 100644
--- a/drivers/scsi/mpt3sas/mpt3sas_base.c
+++ b/drivers/scsi/mpt3sas/mpt3sas_base.c
@@ -724,6 +724,7 @@ _base_fault_reset_work(struct work_struct *work)
 		 * take some time to execute.
 		 */
 		ioc->remove_host = 1;
+		ioc->dead_host = 1;
 		/*Remove the Dead Host */
 		p = kthread_run(mpt3sas_remove_dead_ioc_func, ioc,
 		    "%s_dead_ioc_%d", ioc->driver_name, ioc->id);
diff --git a/drivers/scsi/mpt3sas/mpt3sas_base.h b/drivers/scsi/mpt3sas/mpt3sas_base.h
index 111111111..111111111 100644
--- a/drivers/scsi/mpt3sas/mpt3sas_base.h
+++ b/drivers/scsi/mpt3sas/mpt3sas_base.h
@@ -1175,6 +1175,7 @@ typedef void (*MPT3SAS_FLUSH_RUNNING_CMDS)(struct MPT3SAS_ADAPTER *ioc);
  * @ioc_link_reset_in_progress: phy/hard reset in progress
  * @ignore_loginfos: ignore loginfos during task management
  * @remove_host: flag for when driver unloads, to avoid sending dev resets
+ * @dead_host: flag for when the device has disappeared from PCI
  * @pci_error_recovery: flag to prevent ioc access until slot reset completes
  * @wait_for_discovery_to_complete: flag set at driver load time when
  *                                               waiting on reporting devices
@@ -1372,6 +1373,7 @@ struct MPT3SAS_ADAPTER {
 
 	u8		ignore_loginfos;
 	u8		remove_host;
+	u8		dead_host;
 	u8		pci_error_recovery;
 	u8		wait_for_discovery_to_complete;
 	u8		is_driver_loading;
diff --git a/drivers/scsi/mpt3sas/mpt3sas_scsih.c b/drivers/scsi/mpt3sas/mpt3sas_scsih.c
index 111111111..111111111 100644
--- a/drivers/scsi/mpt3sas/mpt3sas_scsih.c
+++ b/drivers/scsi/mpt3sas/mpt3sas_scsih.c
@@ -4303,7 +4303,7 @@ inline bool _scsih_allow_scmd_to_device(struct MPT3SAS_ADAPTER *ioc,
 	struct scsi_cmnd *scmd)
 {
 
-	if (ioc->pci_error_recovery)
+	if (ioc->pci_error_recovery || ioc->dead_host)
 		return false;
 
 	if (ioc->hba_mpi_version_belonged == MPI2_VERSION) {

