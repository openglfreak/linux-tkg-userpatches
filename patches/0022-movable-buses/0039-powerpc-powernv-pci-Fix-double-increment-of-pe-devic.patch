From 32369603584e1cdf1c646189c4765fd47d52328e Mon Sep 17 00:00:00 2001
From: Sergei Miroshnichenko <s.miroshnichenko@yadro.com>
Date: Thu, 4 Mar 2021 21:52:34 +0300
Subject: [PATCH 39/57] powerpc/powernv/pci: Fix double-increment of
 pe->device_count

pcibios_bus_add_device() can be called a couple of times for a single PCI
device after commit "powerpc/pci: hotplug: Add support for movable BARs".

The pe->device_count was incrementing each time during that, but this must
be performed just once for every PE<->pdev link.

Signed-off-by: Sergei Miroshnichenko <s.miroshnichenko@yadro.com>
---
 arch/powerpc/include/asm/pci-bridge.h     | 1 +
 arch/powerpc/platforms/powernv/pci-ioda.c | 6 ++++++
 2 files changed, 7 insertions(+)

diff --git a/arch/powerpc/include/asm/pci-bridge.h b/arch/powerpc/include/asm/pci-bridge.h
index 111111111..111111111 100644
--- a/arch/powerpc/include/asm/pci-bridge.h
+++ b/arch/powerpc/include/asm/pci-bridge.h
@@ -186,6 +186,7 @@ struct iommu_table;
 
 struct pci_dn {
 	int     flags;
+	bool	dma_done;
 #define PCI_DN_FLAG_IOV_VF	0x01
 #define PCI_DN_FLAG_DEAD	0x02    /* Device has been hot-removed */
 
diff --git a/arch/powerpc/platforms/powernv/pci-ioda.c b/arch/powerpc/platforms/powernv/pci-ioda.c
index 111111111..111111111 100644
--- a/arch/powerpc/platforms/powernv/pci-ioda.c
+++ b/arch/powerpc/platforms/powernv/pci-ioda.c
@@ -1128,6 +1128,9 @@ static void pnv_pci_ioda_dma_dev_setup(struct pci_dev *pdev)
 		pci_info(pdev, "Added to existing PE#%x\n", pe->pe_number);
 	}
 
+	if (pdn->dma_done)
+		return;
+
 	/*
 	 * We assume that bridges *probably* don't need to do any DMA so we can
 	 * skip allocating a TCE table, etc unless we get a non-bridge device.
@@ -1157,6 +1160,8 @@ static void pnv_pci_ioda_dma_dev_setup(struct pci_dev *pdev)
 	/* PEs with a DMA weight of zero won't have a group */
 	if (pe->table_group.group)
 		iommu_add_device(&pe->table_group, &pdev->dev);
+
+	pdn->dma_done = true;
 }
 
 /*
@@ -2827,6 +2832,7 @@ static void pnv_pci_release_device(struct pci_dev *pdev)
 		return;
 
 	iommu_del_device(&pdev->dev);
+	pdn->dma_done = false;
 
 #ifdef CONFIG_PCI_IOV
 	/*

